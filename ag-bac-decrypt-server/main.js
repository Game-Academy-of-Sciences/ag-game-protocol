

const Koa = require('koa');
const Body = require('koa-better-body');
const Router = require('koa-better-router');
const Convert = require('koa-convert');
const Mimetypes = require('mimetypes');

const AGSecurity = require('./ag-security');

/*
var buf = new Uint8Array([0, 4, 155, 16, 0, 0, 0, 47, 0, 0, 0, 63, 254, 174, 22, 232, 254, 172, 22, 218, 254, 172, 22, 249, 189, 156, 38, 207, 250, 235, 85, 201, 206, 154, 39, 192, 199, 157, 37, 201, 179, 248, 22, 249, 248, 170, 20]);

var result = AGSecurity.Decrypt(buf, 4272204351, 4272690937, 2262162613);

var flags = new Int32Array(new Uint8Array(Buffer.from(result.data, 'base64')).buffer.slice(0, 4))[0];

console.log(result);



var buf = [0,4,155,16,0,0,3,254,0,0,3,144,5,128,208,207,1,134,213,48,254,121,49,228,105,222,190,152,86,209,129,161,40,236,140,171,84,226,139,165,90,238,142,212,88,223,137,153,83,212,195,151,105,222,191,153,110,208,177,149,107,161,178,165,99,227,183,160,41,237,141,170,85,227,138,164,91,239,143,213,95,216,138,154,81,214,193,149,107,220,189,155,108,210,179,151,105,163,182,161,105,233,191,168,33,229,133,162,93,235,130,172,83,231,135,221,85,210,130,146,89,222,201,157,99,212,181,147,100,218,187,159,97,171,188,171,109,227,183,160,41,237,141,170,85,227,138,164,91,239,143,213,83,212,133,149,94,217,206,154,100,211,178,148,99,221,188,152,102,172,181,162,105,232,189,170,35,231,135,160,95,233,128,174,81,229,133,223,91,220,132,147,89,220,203,159,97,214,183,145,102,216,185,157,99,169,178,165,99,227,181,163,42,238,142,169,86,224,137,167,88,236,140,214,84,211,133,150,93,218,205,153,103,208,177,151,96,222,191,155,101,175,178,165,108,226,182,161,40,236,140,171,84,226,139,165,90,238,142,212,84,211,135,147,88,223,200,156,98,213,180,146,101,219,186,158,96,170,181,162,110,224,182,161,40,236,140,171,84,226,139,165,90,238,142,212,74,205,158,138,66,197,210,134,120,207,174,136,127,193,160,132,122,176,177,166,105,232,189,170,35,231,135,160,95,233,128,174,81,229,133,223,67,196,156,139,65,198,209,133,123,204,173,139,124,194,163,135,121,179,176,167,109,226,182,161,40,236,140,171,84,226,139,165,90,238,142,212,78,201,159,140,71,192,215,131,125,202,171,141,122,196,165,129,127,181,176,167,107,239,185,174,39,227,131,164,91,237,132,170,85,225,129,219,67,196,157,141,71,192,215,131,125,202,171,141,122,196,165,129,127,181,178,165,108,235,189,170,35,231,135,160,95,233,128,174,81,229,133,223,73,206,150,129,75,206,217,141,115,196,165,131,116,202,171,143,113,187,178,165,109,236,184,175,38,226,130,165,90,236,133,171,84,224,128,218,78,201,145,133,79,200,223,139,117,194,163,133,114,204,173,137,119,190,222,201,2,134,211,196,77,137,233,206,49,135,238,192,63,139,235,178,77,202,146,131,73,206,217,141,115,196,165,131,116,202,171,143,113,184,218,205,0,143,219,204,69,129,225,198,57,143,230,200,55,131,227,186,71,192,153,139,67,196,211,135,121,206,175,137,126,192,161,133,123,178,214,193,12,140,218,205,68,128,224,199,56,142,231,201,54,130,226,187,64,199,158,128,74,205,218,142,112,199,166,128,119,201,168,140,114,187,221,202,4,135,209,196,77,137,233,206,49,135,238,192,63,139,235,178,75,204,153,143,68,195,212,128,126,201,168,142,121,199,166,130,124,181,221,202,3,135,210,197,76,136,232,207,48,134,239,193,62,138,234,179,68,195,149,132,79,200,223,139,117,194,163,133,114,204,173,137,119,190,175,184,113,245,160,181,60,248,152,191,64,246,159,177,78,250,154,195,79,200,152,134,76,203,220,136,118,193,160,134,113,207,174,138,116,189,174,185,114,252,169,190,55,243,147,180,75,253,148,186,69,241,145,200,66,197,148,139,65,198,209,133,123,204,173,139,124,194,163,135,121,176,165,178,116,245,161,182,63,251,155,188,67,245,156,178,77,249,153,192,72,207,152,137,66,197,210,134,120,207,174,136,127,193,160,132,122,179,164,179,126,252,170,189,52,240,144,183,72,254,151,185,70,242,146,203,77,202,157,130,73,206,217,141,115,196,165,131,116,202,171,143,113,184,161,182,120,249,172,187,50,246,150,177,78,248,145,191,64,244,148,205,73,206,158,128,74,205,218,142,112,199,166,128,119,201,168,140,114,187,160,183,112,254,168,191,54,242,146,181,74,252,149,187,68,240,144,201,75,204,148,129,73,206,217,141,115,196,165,131,116,202,171,143,113,184,165,178,122,248,174,185,48,244,148,179,76,250,147,189,66,246,150,207,79,200,154,140,68,195,212,128,126,201,168,142,121,199,166,130,124,181,170,189,116,251,175,184,49,245,149,178,77,251,146,188,67,247,151,206,80,215,134,149,93,218,205,153,103,208,177,151,96,222,191,155,101,172,173,186,125,254,170,189,52,240,144,183,72,254,151,185,70,242,146,203,87,208,136,151,93,216,207,155,101,210,179,149,98,220,189,153,103,174,173,186,112,247,162,180,61,249,153,190,65,247,158,176,79,251,155,194,88,223,139,154,81,214]

var result = AGSecurity.Decrypt(new Uint8Array(buf), 2091177184, 1406314176, 311860112);

var flags = new Int32Array(new Uint8Array(Buffer.from(result.data, 'base64')).buffer.slice(0, 4))[0];

console.log(result);

function bswap_i32(K4Q) {
    K4Q = K4Q | 0;
    return (K4Q & 255) << 24 | (K4Q >> 8 & 255) << 16 | (K4Q >> 16 & 255) << 8 | K4Q >>> 24 | 0;
}
*/
/*
var buf = new Uint8Array([0, 4, 154, 16, 0, 0, 0, 55, 0, 0, 0, 72, 204, 93, 45, 109, 204, 95, 157, 87, 204, 95, 157, 124, 143, 111, 173, 77, 139, 28, 173, 76, 253, 110, 164, 69, 253, 107, 173, 69, 135, 95, 154, 116, 234, 86, 143, 121, 202, 104, 159, 124, 206, 95, 155]);

var result = AGSecurity.Decrypt(buf, 4173009514, 219393681, 3428818300);

var a = Buffer.from(result.data, 'base64')

var flags = new Int32Array(new Uint8Array(Buffer.from(result.data, 'base64')).buffer.slice(0, 4))[0];

console.log(result);
*/




const router = Router({ prefix: '/AGSecurity' });


function Int(val) {
    return new Int32Array([val])[0];
}

router.addRoute('POST', '/Encrypt', async (ctx) => {
    try {
        var buffer = Buffer.from(ctx.request.fields.buffer, 'base64');
        var userEncryptKey = Int(parseInt(ctx.request.fields.userEncryptKey)); 
        var userDecryptKey = Int(parseInt(ctx.request.fields.userDecryptKey));
        var broadcastDecryptKey = Int(parseInt(ctx.request.fields.broadcastDecryptKey));
        var result = AGSecurity.Encrypt(buffer, userEncryptKey, userDecryptKey, broadcastDecryptKey);
        if(result != null) {
            ctx.body = Buffer.from(result)
        }

    } catch(err) {
        
    }

});

router.addRoute('POST', '/Decrypt', async (ctx) => {
    try {
        var buffer = Buffer.from(ctx.request.fields.buffer, 'base64');
        var userEncryptKey = Int(parseInt(ctx.request.fields.userEncryptKey)); 
        var userDecryptKey = Int(parseInt(ctx.request.fields.userDecryptKey));
        var broadcastDecryptKey = Int(parseInt(ctx.request.fields.broadcastDecryptKey));
        var result = AGSecurity.Decrypt(buffer, userEncryptKey, userDecryptKey, broadcastDecryptKey);
        ctx.body = JSON.stringify(result);
        ctx.type = Mimetypes.detectMimeType('json');
    } catch(err) {
        return {
            type: -1
        }
    }
});


const app = new Koa();
app.use(Convert(Body({
    multipart: true,
    buffer: true
})));
app.use(Convert(router.legacyMiddleware()));
app.listen(8888, ()=> {
    console.log('server run: http://localhost:8888/');
});


/*
var buffer = [0,4,155,16,0,0,3,182,0,0,0,72,187,144,173,203,187,146,174,105,187,146,162,158,248,162,157,242,187,146,173,240,252,209,157,243,138,163,148,250,138,160,157,246,252,146,172,198,189,146,234,128,139,162,156,242,130,171,156,241,139,167,229,195,188,147,168,195,252,209,157,243,138,163,148,250,138,160,157,246,242,146,175,192,189,146,234,128,139,162,156,242,130,171,156,241,139,167,231,195,190,145,168,195,252,209,157,243,138,163,148,250,138,160,157,246,240,146,173,202,191,146,234,128,139,162,156,242,130,171,156,241,139,167,225,195,190,155,169,195,252,209,157,243,138,163,148,250,138,160,157,246,246,146,174,196,190,146,234,128,139,162,156,242,130,171,156,241,139,167,227,195,189,154,169,195,252,209,157,243,138,163,148,250,138,160,157,246,244,146,165,198,191,146,234,128,139,162,156,242,130,171,156,241,139,167,253,195,190,154,169,195,252,209,157,243,138,163,148,250,138,160,157,246,234,146,165,198,191,147,234,128,139,162,156,242,130,171,156,241,139,167,255,195,189,145,168,195,252,209,157,243,138,163,148,250,138,160,157,246,232,146,171,196,190,146,234,128,139,162,156,242,130,171,156,241,139,167,249,195,189,150,171,195,252,209,157,243,138,163,148,250,138,160,157,246,238,146,169,196,189,146,234,128,139,162,156,242,130,171,156,241,139,167,251,195,178,151,169,195,252,209,157,243,138,163,148,250,138,160,157,246,236,146,170,193,189,146,234,128,139,162,156,242,130,171,156,241,139,167,245,195,187,145,171,195,252,209,157,243,138,163,148,250,138,160,157,246,226,146,165,193,191,146,234,128,139,162,156,242,130,171,156,241,139,167,247,195,186,149,168,195,252,209,157,243,138,163,148,250,138,160,157,245,139,146,165,199,191,146,234,128,139,162,156,242,130,171,156,241,139,164,156,195,179,148,169,194,252,209,157,243,138,163,148,250,138,160,157,245,137,146,164,194,191,146,234,128,139,162,156,242,130,171,156,241,139,164,158,195,191,144,168,195,252,209,157,243,138,163,148,250,138,160,157,245,143,146,175,202,191,147,234,128,139,162,156,242,130,171,156,241,139,164,152,195,188,149,169,195,252,209,157,243,138,163,148,250,138,160,157,245,141,146,165,193,189,146,234,128,139,162,156,242,130,171,156,241,139,164,154,195,186,144,171,193,252,209,157,243,138,163,148,250,138,160,157,245,131,146,171,196,191,146,234,128,139,162,156,242,130,171,156,241,139,164,148,195,184,144,171,195,252,209,157,243,138,163,148,250,138,160,157,245,250,146,172,202,189,146,234,128,139,162,156,242,130,171,156,241,139,164,239,195,189,154,169,195,252,209,157,243,138,163,148,250,138,160,157,245,248,146,168,196,190,146,234,128,139,162,156,242,130,171,156,241,139,164,233,195,191,150,168,195,252,209,157,243,138,163,148,250,138,160,157,245,254,146,169,193,190,146,234,128,139,162,156,242,130,171,156,241,139,164,235,195,191,146,168,195,252,209,157,243,138,163,148,250,138,160,157,245,252,146,165,197,190,146,234,128,139,162,156,242,130,171,156,241,139,164,229,195,190,149,168,195,252,209,157,243,138,163,148,250,138,160,157,245,242,146,175,198,189,146,234,128,139,162,156,242,130,171,156,241,139,164,231,195,188,149,168,194,252,209,157,243,138,163,148,250,138,160,157,245,240,146,170,203,191,146,234,128,139,162,156,242,130,171,156,241,139,164,225,195,188,145,168,195,252,209,157,243,138,163,148,250,138,160,157,245,246,146,174,194,189,146,234,128,139,162,156,242,130,171,156,241,139,164,227,195,191,150,171,194,252,209,157,243,138,163,148,250,138,160,157,245,244,146,169,202,191,146,234,128,139,162,156,242,130,171,156,241,139,164,253,195,186,149,171,195,252,209,157,243,138,163,148,250,138,160,157,245,234,146,174,195,190,146,234,128,139,162,156,242,130,171,156,241,139,164,255,195,191,149,168,195,252,209,157,243,138,163,148,250,138,160,157,245,232,146,171,196,191,146,234,128,139,162,156,242,130,171,156,241,139,164,249,195,185,147,171,195,252,209,157,243,138,163,148,250,138,160,157,245,238,146,172,199,189,146];
var userEncryptKey = -710368143;
var userDecryptKey = -1148015165;
var broadcastDecryptKey = 672857659;

var result = AgSecurity.Encrypt(buffer, 301840, userEncryptKey, userDecryptKey, broadcastDecryptKey);

console.log(result.toString());
*/

